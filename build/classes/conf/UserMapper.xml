<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.spring.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="psw" property="psw" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, card_NO, ACCOUNT, PSW, NAME, ROLE_ID, address, MOBILE, sex, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByUser" resultMap="BaseResultMap" parameterType="com.spring.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from user
    where account=#{account} and psw=#{psw} limit 1
  </select>
  
   <select id="findByPage" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from user
    where 1=1
    <if test="account!=null">
    	and account like concat(concat('%',#{account}),'%')
    </if>
    <if test="name!=null">
    	and name like concat(concat('%',#{name}),'%')
    </if>
    order by id desc
  </select>
  
  <select id="findByUser" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from user
    where 1=1
    <if test="account!=null">
    	and account =#{account}
    </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.entity.User" >
    insert into user ( CARD_NO, ACCOUNT, 
      PSW, NAME, ROLE_ID, MOBILE, SEX, create_time)
    values (#{cardNo,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{psw,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
       #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, NOW())
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.entity.User" >
    update user
    <set >
      <if test="cardNo != null" >
        CARD_NO = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="psw != null" >
        PSW = #{psw,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.entity.User" >
    update user
    set USER_NO = #{userNo,jdbcType=VARCHAR},
      ACCOUNT = #{account,jdbcType=VARCHAR},
      PSW = #{psw,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ROLE_ID = #{roleId,jdbcType=INTEGER},
      ADRESS = #{adress,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>